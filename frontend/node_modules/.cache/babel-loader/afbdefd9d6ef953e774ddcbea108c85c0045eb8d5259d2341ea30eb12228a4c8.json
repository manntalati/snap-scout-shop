{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  detectProduct: async imageFile => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    const response = await api.post('/detect-product', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  sendChatMessage: async (message, productData) => {\n    const response = await api.post('/chat', {\n      message,\n      product_data: productData\n    });\n    return response.data;\n  },\n  getRecommendations: async question => {\n    const response = await api.post('/recommend', {\n      question\n    });\n    return response.data;\n  },\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","apiService","detectProduct","imageFile","formData","FormData","append","response","post","data","sendChatMessage","message","productData","product_data","getRecommendations","question","healthCheck","get"],"sources":["/Users/manntalati/Desktop/Projects/snap-scout-shop/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport interface ProductDetectionResponse {\n  name: string;\n  brand: string;\n  price: number;\n  confidence: number;\n  category: string;\n}\n\nexport interface ChatResponse {\n  response: string;\n  sources: Array<{\n    id: string;\n    price_history: any;\n  }>;\n}\n\nexport interface RecommendationResponse {\n  answer: string;\n  sources: Array<{\n    id: string;\n    price_history: any;\n  }>;\n}\n\nexport const apiService = {\n  detectProduct: async (imageFile: File): Promise<ProductDetectionResponse> => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    \n    const response = await api.post('/detect-product', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  sendChatMessage: async (message: string, productData?: any): Promise<ChatResponse> => {\n    const response = await api.post('/chat', {\n      message,\n      product_data: productData,\n    });\n    return response.data;\n  },\n\n  getRecommendations: async (question: string): Promise<RecommendationResponse> => {\n    const response = await api.post('/recommend', {\n      question,\n    });\n    return response.data;\n  },\n\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default apiService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AA0BF,OAAO,MAAMC,UAAU,GAAG;EACxBC,aAAa,EAAE,MAAOC,SAAe,IAAwC;IAC3E,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,CAAC;IAElC,MAAMI,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,iBAAiB,EAAEJ,QAAQ,EAAE;MAC3DJ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOO,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,eAAe,EAAE,MAAAA,CAAOC,OAAe,EAAEC,WAAiB,KAA4B;IACpF,MAAML,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,OAAO,EAAE;MACvCG,OAAO;MACPE,YAAY,EAAED;IAChB,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDK,kBAAkB,EAAE,MAAOC,QAAgB,IAAsC;IAC/E,MAAMR,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,YAAY,EAAE;MAC5CO;IACF,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMT,QAAQ,GAAG,MAAMV,GAAG,CAACoB,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOV,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}